language: cpp
sudo: false


addons:
  apt:
    packages:
      #- valgrind
      - g++-5
      - g++-6
      - g++-7
      - clang++-3.7
      - clang++-3.8
      - clang++-3.9
    sources: &sources
    - llvm-toolchain-precise-3.7
    - llvm-toolchain-precise-3.8
    - llvm-toolchain-precise-3.9
    - ubuntu-toolchain-r-test


matrix:
  include:
    # Clang 3.7
    - os: linux
      env: COMPILER=clang++-3.7
      compiler: clang

    # Clang 3.8
    - os: linux
      env: COMPILER=clang++-3.8
      compiler: clang

    # Clang 3.9
    - os: linux
      env: COMPILER=clang++-3.9
      compiler: clang

    # GCC 5
    - os: linux
      env: COMPILER=g++-5
      compiler: gcc

    # GCC 6
    - os: linux
      env: COMPILER=g++-6
      compiler: gcc

    # GCC 7
    - os: linux
      env: COMPILER=g++-7
      compiler: gcc

    # Xcode 6.4
    - os: osx
      osx_image: xcode6.4

    # Xcode 7.3
    - os: osx
      osx_image: xcode7.3

    # Xcode 8
    - os: osx
      osx_image: xcode8


install:
  # Installing a recent version of Ruby (needed for Homebrew)
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      rvm use 2.3 --install --binary --fuzzy
      gem install ruby-progressbar tilt
    fi

  # Getting Boost for testing
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install libboost-test-dev; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install boost; fi

  # Getting CMake for building
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install cmake; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew upgrade cmake || brew install cmake; fi

  # Getting Doxygen for documentation
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install doxygen; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install doxygen; fi
  
  # Getting latest version of LCOV for the linux debug build
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" && "$CONFIG" == "DEBUG" ]]; then
       wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
       tar xf lcov_1.11.orig.tar.gz
       sudo make -C lcov-1.11/ install
       sudo apt-get install ruby1.9.1 ruby1.9.1-dev
       sudo apt-get install rubygems1.9.1 irb1.9.1 ri1.9.1
       rvmsudo gem install coveralls-lcov
    fi


before_script:
  # Set up the git identity (for pushing documentation)
  - git config --global user.name "Travis bot"
  - git config --global user.email "<>"

  # Initialize coverage to 0 on the Linux debug build
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" && "$CONFIG" == "DEBUG" ]]; then 
       cd ${TRAVIS_BUILD_DIR}
       lcov --directory . --zerocounters
    fi


script:    
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=$CONFIG -DCMAKE_CXX_COMPILER=$COMPILER ..
  - make
  - ctest
  #- python testrunner.py ${TRAVIS_BUILD_DIR} ${TRAVIS_BUILD_DIR}


after_success:
  # Sending coverage info collected with the Linux debug build
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" && "$CONFIG" == "DEBUG" ]]; then 
       cd ${TRAVIS_BUILD_DIR}
       lcov --directory . --capture --output-file coverage.info
       lcov --remove coverage.info 'tests/*' '/usr/*' --output-file coverage.info
       lcov --list coverage.info
       coveralls-lcov coverage.info
    fi
  
